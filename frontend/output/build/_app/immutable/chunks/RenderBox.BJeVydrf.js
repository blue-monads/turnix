import{a as d,t as g}from"./disclose-version.BOfWGsg9.js";import{p as w,h as b,b as m,a as v,i as _,c as M,r as k,t as q}from"./runtime.CmPLUjJJ.js";import{e as x,b as I}from"./events.DnYA5zBv.js";import{k as C}from"./key.B3I6Q0YW.js";import{s as p}from"./attributes.yGGqmlPO.js";import{b as F}from"./this.DlUubvPq.js";import{p as H}from"./props.IjRlZquB.js";var P=g(`<iframe width="100%" height="100%" class="border-green-200 w-full h-full transition-all" allow="accelerometer; ambient-light-sensor; autoplay; battery; camera; clipboard-write;
        document-domain; encrypted-media; fullscreen; geolocation; gyroscope; layout-animations;
        legacy-image-formats; magnetometer; microphone; midi; oversized-images; payment;
        picture-in-picture; publickey-credentials-get; sync-xhr; usb; vr ; wake-lock;
        xr-spatial-tracking" sandbox="allow-forms allow-modals allow-popups allow-popups-to-escape-sandbox
        allow-same-origin allow-scripts allow-downloads allow-storage-access-by-user-activation"></iframe>`),R=g('<div class="card p-2 h-full w-full"><!></div>');function L(u,o){w(o,!0);let f=H(o,"handle",15),i=_(0),t,s;f({reload:()=>{console.log("reload"),b(i,m(i)+1),s=void 0},print:()=>{var r;(r=s==null?void 0:s.contentWindow)==null||r.print()}});const h=async r=>{const a=r.data;if(console.log("onFrameMessage",a),o.ipcHandler){await o.ipcHandler(r);return}if(a.type==="sql_query"){console.log("sql_query",a);const l=a.data.args,n=a.data.sql;try{const e=await o.rootApi.runProjectSQL2(o.pid,{qstr:n,data:l});if(e.status!==200){t==null||t.postMessage({msgId:a.msgId,data:{msg:"error",data:e.data}});return}t==null||t.postMessage({msgId:a.msgId,data:{msg:"success",data:e.data}})}catch{}}else a.type==="api_call"?console.log("api_call",a):a.type==="ping"&&(t==null||t.postMessage({msgId:a.msgId,data:{msg:"pong"}}))};var c=R(),y=M(c);C(y,()=>m(i),r=>{var a=P();F(a,l=>s=l,()=>s),q(()=>{p(a,"title",o.title||""),p(a,"srcdoc",o.htmlSource)}),x("load",a,l=>{var n;try{let e=new MessageChannel;e.port1.onmessage=h,t=e.port1,console.log("chan.port2 type:",e.port2 instanceof MessagePort),(n=s==null?void 0:s.contentWindow)==null||n.postMessage("transfer_port","*",[e.port2])}catch(e){console.error("Error in postMessage:",e)}}),I(a),d(r,a)}),k(c),d(u,c),v()}export{L as R};
