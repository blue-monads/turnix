var s=Object.defineProperty;var i=(n,e,t)=>e in n?s(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t;var l=(n,e,t)=>(i(n,typeof e!="symbol"?e+"":e,t),t);const r=n=>new p(n.projectClient);class p{constructor(e){l(this,"client");l(this,"listTemplates",e=>this.client.get(`/pt/laction/template/${e}`));l(this,"addTemplate",(e,t)=>this.client.post(`/pt/laction/template/${e}`,t));l(this,"updateTemplate",(e,t,u)=>this.client.post(`/pt/laction/template/${e}/${t}`,u));l(this,"getTemplate",(e,t)=>this.client.get(`/pt/laction/template/${e}/${t}`));l(this,"removeTemplate",(e,t)=>this.client.delete(`/pt/laction/template/${e}/${t}`));l(this,"pushQueueMessage",(e,t,u)=>this.client.post(`/pt/laction/template/${e}/${t}/push`,u));l(this,"listQueueMessages",e=>this.client.get(`/pt/laction/queue/${e}`));l(this,"addQueueMessage",(e,t)=>this.client.post(`/pt/laction/queue/${e}`,t));l(this,"updateQueueMessage",(e,t,u)=>this.client.post(`/pt/laction/queue/${e}/${t}`,u));l(this,"getQueueMessage",(e,t)=>this.client.get(`/pt/laction/queue/${e}/${t}`));l(this,"removeUpdateQueueMessage",(e,t)=>this.client.delete(`/pt/laction/queue/${e}/${t}`));l(this,"queryQueueMessage",e=>this.client.post(`/pt/laction/queue/${e}`));this.client=e}}export{r as N};
